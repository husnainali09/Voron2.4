######################### PAUSE/RESUME/CANCEL #########################

######################### PAUSE/RESUME/CANCEL #########################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
	SDCARD_RESET_FILE
	PRINT_END
	BASE_CANCEL_PRINT

# Pause and park toolhead at front center. Z hop by 10mm.
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
	# Parameters
	{% set z = params.Z|default(10)|int %}																					; z hop amount
	
	{% if printer.pause_resume.is_paused|lower == 'false' %}
        {action_respond_info("DEBUG: PAUSE macro inside if statement")}    
		SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}									    				    ; set z hop variable for reference in resume macro
		SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer.extruder.target}  									; set hotend temp variable for reference in resume macro
								
#		SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0																	; disable filament sensor		
		BASE_PAUSE																											; pause print
		{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}										; check that zhop doesn't exceed z max
			G91																												; relative positioning
			G1 Z{z} F900																									; raise Z up by z hop amount
		{% else %}
			{ action_respond_info("Pause zhop exceeds maximum Z height.") }													; if z max is exceeded, show message and set zhop value for resume to 0
			SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
		{% endif %}
		G90																													; absolute positioning
		G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F19500; park toolhead at front center
		G92 E0                                                                             ; zero the extruder
        M83                                                                                ; relative extrusion
        G1 E-2 F3600                                                                       ; retract filament
        SAVE_GCODE_STATE NAME=PAUSEPARK																						; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)	
		M104 S0																												; turn off hotend
		SET_IDLE_TIMEOUT TIMEOUT=43200															    						; set timeout to 12 hours
	{% endif %}

# Return Z hop back down 10mm, prime nozzle, resume print.
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
	# Parameters
	{% set e = params.E|default(2.5)|float %}
	
	{% if printer.pause_resume.is_paused|lower == 'true' %}
        {action_respond_info("DEBUG: RESUME macro inside if statement")}
#		SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1																	; enable filament sensor
		RESETRGB																											; reset LCD color
		SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}											; set timeout back to configured value
		{% if etemp > 0 %}
			M109 S{etemp|int}																								; wait for hotend to heat back up
		{% endif %}
		RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=450															; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)	
		G91																													; relative positioning
		M83																													; relative extruder positioning
		{% if printer.extruder.can_extrude|lower == 'false' %}												
			G1 Z{zhop * -1} E{e} F900																						; prime nozzle by E, lower Z back down
		{% else %}						
			G1 Z{zhop * -1} F900																							; lower Z back down	without priming (just in case we are testing the macro with cold hotend)
		{% endif %}
        G92 E0                                   ; zero the extruder
        M83                                      ; relative extrusion
        G1 E1.975 F3600                          ; Extrude filament
		BASE_RESUME VELOCITY=450																							; resume print
	{% endif %}

# Filament runout / change alias	
#[gcode_macro M600]
#gcode:
#	LCDRGB R=0 G=1 B=0	# Turn LCD green
#	PAUSE
	
# Disable filament sensor 1 sec after startup, only enable during prints (in PRINT_START/PRINT_END)

#[delayed_gcode DISABLEFILAMENTSENSOR]	
#initial_duration: 1
#gcode:
#	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
